

void Graph() {
  TCanvas *c = new TCanvas("Index" , "Index" , 500 , 400);
  //  double  x[7] = {5.79587 , 8.31994 , 12.2997 , 16.0620 , 18.0975 , 20.9331 , 23.9628};
  // double  x[7] = {11.314 , 14.142 , 16.97 , 19.798 , 22.627 , 25.456 , 28.284};
  double  x[7] = {4 , 5 , 6 , 7 , 8 , 9 , 10};
  double  x2[11] = {2 , 3 ,4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12};
  //double y[7] = {35./35., 53/(53*0.691379) , 72/(72*0.549148) , 95/(95*0.445104) , 99/(99*0.380266) , 106/(106*0.329058) , 112/(112*0.329058)};
   double y[7] = {35./35., 35/(53*0.691379) , 35/(72*0.549148) , 35/(95*0.445104) , 35/(99*0.380266) , 35/(106*0.329058) , 35/(112*0.294863)};
  //double y1[7] = {35/11.314 , 53/14.142 , 72/16.97 , 95/19.798 , 99/22.627 , 106/25.456 , 112/28.284};
  // double e[7] = {10/11.314 , 10/14.142 , 11/16.97 , 12/19.798 , 12/22.627 , 12/25.456 , 12/28.284};
  // double e1[7] = {10/5.79587 , 10/8.31994 , 11/12.2997 , 12/16.0620 , 12/18.0975 , 12/20.9931 , 12/23.9628};
  //double e1[7] = {10./35. , 10/(53*0.691379) , 10/(72*0.549148) , 10/(95*0.445104) , 10/(99*0.380266) , 10/(106*0.329058) , 10/(112*0.329058)};
  double e1[7] = {sqrt( pow((10./35.),2) + pow((10.*1/pow(35.,2.)),2.)) , sqrt( pow(10./(53.*0.691379),2) + pow(10.*35./(pow(53. , 2)*0.691379),2.)) , sqrt( pow(10./(72.*0.549148) ,2) + pow(11.*35./(pow(72., 2.)*0.549148),2)) , sqrt( pow(10./(95.*0.445104),2) + pow(12.*35./(pow(95., 2.)*0.445104),2)) ,  sqrt( pow(10./(99.*0.380266),2) + pow(12.*35./(pow(99.,2)*0.380266),2)) , sqrt( pow(10./(106.*0.329058),2) + pow(12.*35./(pow(106.,2.)*0.329058),2)) ,  sqrt( pow(10./(112.*0.294863),2) + pow(12.*35./(pow(112.,2)*0.294863),2))};
  double ex[7] = {0 , 0 ,0 ,0 ,0 ,0 , 0 };
  double y2[7] = {35. , 53*0.691379 ,72*0.549148 , 95*0.445104 , 99*0.380266 , 106*0.329058 , 112*0.294863 };
  double e2[7] = {10. , 10*0.691379 ,10*0.549148 , 11*0.445104 , 12*0.380266 , 12*0.329058 , 12*0.294863 };
  TGraphErrors *gr = new TGraphErrors(7 , x , y);
  double ymin[11] = {y[1] - e1[1] , y[1] - e1[1] ,y[1] - e1[1] ,y[1] - e1[1] ,y[1] - e1[1] ,y[1] - e1[1] , y[1] - e1[1] , y[1] - e1[1] ,y[1] - e1[1] ,y[1] - e1[1] ,y[1] - e1[1] };
  double ymax[11] = {y[1] + e1[1] , y[1] + e1[1],y[1] + e1[1] ,y[1] + e1[1] ,y[1] + e1[1],y[1] + e1[1] ,y[1] + e1[1] , y[1] + e1[1] ,y[1] + e1[1] ,y[1] + e1[1] ,y[1] + e1[1]};
  TGraph *grShade = new TGraph(22);
  TGraph *grmin = new TGraph(11,x2,ymin);
  TGraph *grmax = new TGraph(11,x2,ymax);
  for (int i = 0; i < 11 ; i ++){
    grShade -> SetPoint(i , x2[i] , ymax[i]);
    grShade -> SetPoint(11+i , x2[11-i-1] , ymin[11-i-1]);

  }
  grShade->SetFillStyle(3001);
  grShade->SetFillColor(kGreen);
  grShade->SetLineColor(kGreen);
  grShade -> SetTitle("Bkg Index");
  grShade -> GetXaxis() -> SetTitle("Cut [MeV]");
  grShade -> GetYaxis() -> SetTitle("Bkg Index");
  grShade -> GetXaxis() -> SetRangeUser(3 , 11);
  grShade->Draw("ALF"); 
  gr -> SetMarkerStyle(20);
  gr -> SetMarkerColor(1);
  c -> SetGrid();
  gr -> Draw("Psame");
  c -> SaveAs("Index.png");

}
